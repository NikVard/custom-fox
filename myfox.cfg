//	myfox.cfg
//
//      Firefox is configured by using two configuration files (a system-wide installation):
//
//      OS                  Original name   Path and file name
//		----------------------------------------------------------------------------------------------
//      Windows             prefs.js        %programfiles(x86)%\Mozilla Firefox\defaults\pref\prefs.js
//      Windows             firefox.cfg     %programfiles(x86)%\Mozilla Firefox\firefox.cfg
//
//      Windows             prefs.js        C:\Program Files (x86)\Mozilla Firefox\defaults\pref\prefs.js
//      Windows             firefox.cfg     C:\Program Files (x86)\Mozilla Firefox\firefox.cfg
//		
//      Linux               prefs.js        Either this file is not required or is copied to ~/.mozilla/firefox/*.default/prefs.js
//      Linux               firefox.cfg     /etc/firefox/firefox.js
//      Linux (Debian)	    firefox.cfg     /etc/firefox-esr/firefox-esr.js
//      Linux (CentOS 6.3)  firefox.cfg     /usr/l/usr/lib64/firefox/defaults/preferencesib64/firefox/defaults/preferences/your_site.js
//		----------------------------------------------------------------------------------------------	
//
// 		If the settings can be changed through about:config (unlocked), use pref("<name>"); else use lockPref("<name>")


// [SECTION 0000]
// Disable about:config warning
	// pref("general.warnOnAboutConfig", false);
pref("browser.aboutConfig.showWarning", false);



// *** [SECTION 0100]: STARTUP
// -------------------------------------------------------------------------
// * 0101: disable default browser check
// [SETTING] General>Startup>Always check if Firefox is your default browser
pref("browser.shell.checkDefaultBrowser", false);

// * 0104: set NEWTAB page
// true=Activity Stream (default, see 0105), false=blank page
// [SETTING] Home>New Windows and Tabs>New tabs
lockPref("browser.newtabpage.enabled", false);
lockPref("browser.newtab.preload", false);

// * 0105: disable Activity Stream (AS)
// AS is the default homepage/newtab based on metadata and browsing behavior
// [SETTING] Home>Firefox Home Content>...  to show/hide what you want
// a. disable Activity Stream telemetry
lockPref("browser.newtabpage.activity-stream.feeds.telemetry", false);
lockPref("browser.newtabpage.activity-stream.telemetry", false);
// b. disable Activity Stream Snippets
lockPref("browser.newtabpage.activity-stream.feeds.snippets", false);
// c. disable Activity Stream Top Stories, Pocket-based and/or sponsored content
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
lockPref("browser.newtabpage.activity-stream.section.highlights.includePocket", false);
lockPref("browser.newtabpage.activity-stream.showSponsored", false);
lockPref("browser.newtabpage.activity-stream.feeds.discoverystreamfeed", false);
lockPref("browser.newtabpage.activity-stream.showSponsoredTopSites", false);
// d. clear default topsites
// [NOTE] This does not block you from adding your own
lockPref("browser.newtabpage.activity-stream.default.sites", "");



// *** [SECTION 0200]: GEOLOCATION / LANGUAGE / LOCALE
// ** GEOLOCATION
// * 0201: disable Location-Aware Browsing
// [NOTE] Best left at default "true", fingerprintable, already behind a prompt (see 0202)
// pref("geo.enabled", false);

// * 0202: set a default permission for Location (see 0201) [FF58+]
// 0=always ask (default), 1=allow, 2=block
// [SETTING] to add site exceptions: Ctrl+I>Permissions>Access Your Location
// [SETTING] to manage site exceptions: Options>Privacy & Security>Permissions>Location>Settings
// pref("permissions.default.geo", 2);

// * 0203: use Mozilla geolocation service instead of Google when geolocation is enabled [FF74+]
// Optionally enable logging to the console (defaults to false) 
pref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
// pref("geo.provider.network.logging.enabled", true); // [HIDDEN PREF]

// * 0204: disable using the OS's geolocation service
//lockPref("geo.provider.ms-windows-location", false); // [WINDOWS]
lockPref("geo.provider.use_gpsd", false); // [LINUX]

// * 0207: disable region updates
pref("browser.region.network.url", "");
pref("browser.region.update.enabled", false);

// * 0208: set search region
// [NOTE] May not be hidden if Firefox has changed your settings due to your region (see 0207)
// pref("browser.search.region", "US"); // [HIDDEN PREF]

// ** LANGUAGE/LOCALE
// * 0210: set preferred language for displaying web pages
// [TEST] https://addons.mozilla.org/about
lockPref("intl.accept_languages", "en-US, en");

// * 0211: use US English locale regardless of the system locale
// [SETUP-WEB] May break some input methods e.g xim/ibus for CJK languages
lockPref("javascript.use_us_english_locale", true); // [HIDDEN PREF]

// * MISCELLANEOUS
lockPref("geo.wifi.logging.enabled", false); // [*]
lockPref("geo.wifi.uri", ""); // [*]



// *** [SECTION 0300]: QUIET FOX
// * 0301: disable auto-INSTALLING Firefox updates [NON-WINDOWS FF65+]
// [SETTING] General>Firefox Updates>Check for updates but let you choose to install them
lockPref("app.update.auto", false);

// * 0302: disable auto-INSTALLING Firefox updates via a background service [FF90+] [WINDOWS]
// [SETTING] General>Firefox Updates>Automatically install updates>When Firefox is not running
//lockPref("app.update.background.scheduling.enabled", false);

// * 0303: disable auto-CHECKING for extension and theme updates
	// pref("extensions.update.enabled", false);

// * 0304: disable auto-INSTALLING extension and theme updates (after the check in 0303)
// [SETTING] about:addons>Extensions>[cog-wheel-icon]>Update Add-ons Automatically (toggle)
	// pref("extensions.update.autoUpdateDefault", false);

// * 0306: disable extension metadata
// user_pref("extensions.getAddons.cache.enabled", false);

// * 0308: disable search engine updates (e.g. OpenSearch)
pref("browser.search.update", false);

// * 0320: disable about:addons' Recommendations pane (uses Google Analytics)
lockPref("extensions.getAddons.showPane", false); // [HIDDEN PREF]

// * 0321: disable recommendations in about:addons' Extensions and Themes panes [FF68+]
lockPref("extensions.htmlaboutaddons.recommendations.enabled", false);

// Disable telemetry and health reporting
// * 0330: disable telemetry
lockPref("toolkit.telemetry.unified", false);
lockPref("toolkit.telemetry.unifiedIsOptIn", true); // [*]
lockPref("toolkit.telemetry.enabled", false); // see [NOTE]
lockPref("toolkit.telemetry.server", "data:,");
//lockPref("toolkit.telemetry.server", "");
lockPref("toolkit.telemetry.archive.enabled", false);
lockPref("toolkit.telemetry.newProfilePing.enabled", false); // [FF55+]
lockPref("toolkit.telemetry.shutdownPingSender.enabled", false); // [FF55+]
lockPref("toolkit.telemetry.updatePing.enabled", false); // [FF56+]
lockPref("toolkit.telemetry.bhrPing.enabled", false); // [FF57+] Background Hang Reporter
lockPref("toolkit.telemetry.firstShutdownPing.enabled", false); // [FF57+]
lockPref("toolkit.telemetry.cachedClientID", ""); // [*]
lockPref("toolkit.telemetry.prompted", 2); // [*]
lockPref("toolkit.telemetry.rejected", true); // [*]
lockPref("toolkit.telemetry.optoutSample", false); // [*]




// * 0331: disable Telemetry Coverage
lockPref("toolkit.telemetry.coverage.opt-out", true); // [HIDDEN PREF]
lockPref("toolkit.coverage.opt-out", true); // [FF64+] [HIDDEN PREF]
lockPref("toolkit.coverage.endpoint.base", "");

// * 0340: disable Health Reports
// [SETTING] Privacy & Security>Firefox Data Collection & Use>Allow Firefox to send technical... data
lockPref("datareporting.healthreport.uploadEnabled", false);

// * MISCELLANEOUS
lockPref("datareporting.healthreport.documentServerURI", "");
lockPref("datareporting.healthreport.service.enabled", false);

// * 0341: disable new data submission, master kill switch [FF41+]
lockPref("datareporting.policy.dataSubmissionEnabled", false);
lockPref("datareporting.policy.dataSubmissionEnabled.v2", false); //      Firefox 43+ ?

// * 0342: disable Studies (see 0503)
// [SETTING] Privacy & Security>Firefox Data Collection & Use>Allow Firefox to install and run studies
lockPref("app.shield.optoutstudies.enabled", false);

// * 0343: disable personalized Extension Recommendations in about:addons and AMO [FF65+]
// [NOTE] This pref has no effect when Health Reports (0340) are disabled
// [SETTING] Privacy & Security>Firefox Data Collection & Use>Allow Firefox to make personalized extension recommendations
lockPref("browser.discovery.enabled", false);

// * 0350: disable Crash Reports
lockPref("breakpad.reportURL", "");
lockPref("browser.tabs.crashReporting.sendReport", false); // [FF44+]
lockPref("browser.crashReports.unsubmittedCheck.enabled", false); // [FF51+] [DEFAULT: false]

// * MISCELLANEOUS
lockPref("dom.ipc.plugins.flash.subprocess.crashreporter.enabled", false);
lockPref("dom.ipc.plugins.reportCrashURL", false);



// * 0351: enforce no submission of backlogged Crash Reports [FF58+]
// [SETTING] Privacy & Security>Firefox Data Collection & Use>Allow Firefox to send backlogged crash reports
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit2", false); // [DEFAULT: false]

// * 0390: disable Captive Portal detection
lockPref("captivedetect.canonicalURL", "");
lockPref("network.captive-portal-service.enabled", false); // [FF52+]

// * 0391: disable Network Connectivity checks [FF65+]
	// pref("network.connectivity-service.enabled", false);



// *** [SECTION 0400]: BLOCKLISTS / SAFE BROWSING (SB)
// ** BLOCKLISTS
// * 0401: enforce Firefox blocklist
//lockPref("extensions.blocklist.enabled", true); // [DEFAULT: true]

// ** SAFE BROWSING (SB)
// * 0410: disable SB (Safe Browsing)
// [SETTING] Privacy & Security>Security>... Block dangerous and deceptive content
	// pref("browser.safebrowsing.malware.enabled", false);
	// pref("browser.safebrowsing.phishing.enabled", false);

// * 0411: disable SB checks for downloads (both local lookups + remote)
// [SETTING] Privacy & Security>Security>... "Block dangerous downloads"
// pref("browser.safebrowsing.downloads.enabled", false);

// * 0412: disable SB checks for downloads (remote)
// [NOTE] 	To verify the safety of certain executable files, Firefox may submit some information about the
//			file, including the name, origin, size and a cryptographic hash of the contents, to the Google
//			Safe Browsing service which helps Firefox determine whether or not the file should be blocked
pref("browser.safebrowsing.downloads.remote.enabled", false);
pref("browser.safebrowsing.downloads.remote.url", "");

// * 0413: disable SB checks for unwanted software
// [SETTING] Privacy & Security>Security>... "Warn you about unwanted and uncommon software"
	// pref("browser.safebrowsing.downloads.remote.block_potentially_unwanted", false);
	// pref("browser.safebrowsing.downloads.remote.block_uncommon", false);

// * 0419: disable "ignore this warning" on SB warnings [FF45+]
// If clicked, it bypasses the block for that session. This is a means for admins to enforce SB
//lockPref("browser.safebrowsing.allowOverride", false);



// *** [SECTION 0500]: SYSTEM ADD-ONS / EXPERIMENTS
// * 0503: disable Normandy/Shield [FF60+]
// Shield is an telemetry system (including Heartbeat) that can also push and test "recipes"
// [1] https://wiki.mozilla.org/Firefox/Shield
// [2] https://github.com/mozilla/normandy
pref("app.normandy.enabled", false);
pref("app.normandy.api_url", "");

// * 0505: disable System Add-on updates
	// pref("extensions.systemAddon.update.enabled", false); // [FF62+]
	// pref("extensions.systemAddon.update.url", ""); // [FF44+]

// * 0506: disable PingCentre telemetry (used in several System Add-ons) [FF57+]
// Defense-in-depth: currently covered by 0340
lockPref("browser.ping-centre.telemetry", false);

// * 0515: disable Screenshots
	// pref("extensions.screenshots.disabled", true); // [FF55+]

// * 0517: disable Form Autofill
// [NOTE] Stored data is NOT secure (uses a JSON file)
// [NOTE] Heuristics controls Form Autofill on forms without @autocomplete attributes
// [SETTING] Privacy & Security>Forms and Autofill>Autofill addresses
	// pref("extensions.formautofill.addresses.enabled", false); // [FF55+]
	// pref("extensions.formautofill.available", "off"); // [FF56+]
lockPref("extensions.formautofill.creditCards.available", false); // [FF57+]
lockPref("extensions.formautofill.creditCards.enabled", false); // [FF56+]
	// pref("extensions.formautofill.heuristics.enabled", false); // [FF55+]

// * 0518: enforce disabling of Web Compatibility Reporter [FF56+]
// Web Compatibility Reporter adds a "Report Site Issue" button to send data to Mozilla
lockPref("extensions.webcompat-reporter.enabled", false); // [DEFAULT: false]



// *** [SECTION 0600]: BLOCK IMPLICIT OUTBOUND [not explicitly asked for - e.g. clicked on]
// * 0601: disable link prefetching
lockPref("network.prefetch-next", false);

// * 0602: disable DNS prefetching
lockPref("network.dns.disablePrefetch", true);
lockPref("network.dns.disablePrefetchFromHTTPS", true); // [DEFAULT: true]

// * 0603: disable predictor / prefetching
lockPref("network.predictor.enabled", false);
lockPref("network.predictor.enable-prefetch", false); // [FF48+] [DEFAULT: false]
lockPref("network.predictor.enable-hover-on-ssl", false);

// * 0605: disable link-mouseover opening connection to linked server
lockPref("network.http.speculative-parallel-limit", 0);

// * 0606: enforce no "Hyperlink Auditing" (click tracking)
lockPref("browser.send_pings", false); // [DEFAULT: false]



// *** [SECTION 0700]: HTTP* / TCP/IP / DNS / PROXY / SOCKS etc
// * 0701: disable IPv6
	// pref("network.dns.disableIPv6", true);

// * 0702: disable HTTP2
//lockPref("network.http.spdy.enabled", false);
//lockPref("network.http.spdy.enabled.deps", false);
//lockPref("network.http.spdy.enabled.http2", false);
//lockPref("network.http.spdy.websockets", false); // [FF65+]

// * 0703: disable HTTP Alternative Services [FF37+]
	// pref("network.http.altsvc.enabled", false);
	// pref("network.http.altsvc.oe", false);

// * 0704: set the proxy server to do any DNS lookups when using SOCKS
pref("network.proxy.socks_remote_dns", true);

// * 0709: disable using UNC (Uniform Naming Convention) paths [FF61+]
	// pref("network.file.disable_unc_paths", true); // [HIDDEN PREF]

// * 0710: disable GIO as a potential proxy bypass vector
	// pref("network.gio.supported-protocols", ""); // [HIDDEN PREF]



// *** [SECTION 0800]: LOCATION BAR / SEARCH BAR / SUGGESTIONS / HISTORY / FORMS
// * 0801: disable location bar using search
	// pref("keyword.enabled", false);

// * 0802: disable location bar domain guessing
pref("browser.fixup.alternate.enabled", false);

// * 0803: display all parts of the url in the location bar
	// pref("browser.urlbar.trimURLs", false);

// * 0805: disable coloring of visited links - CSS history leak
	// pref("layout.css.visited_links_enabled", false);

// * 0807: disable live search suggestions
// [SETTING] Search>Provide search suggestions | Show search suggestions in address bar results
pref("browser.search.suggest.enabled", false);
pref("browser.urlbar.suggest.searches", false);

// * 0810: disable location bar making speculative connections [FF56+]
pref("browser.urlbar.speculativeConnect.enabled", false);

// * 0811: disable location bar leaking single words to a DNS provider **after searching** [FF78+]
// 0=never resolve single words, 1=heuristic (default), 2=always resolve
pref("browser.urlbar.dnsResolveSingleWordsAfterSearch", 0);

// * 0850a: disable location bar suggestion types
// [SETTING] Privacy & Security>Address Bar>When using the address bar, suggest
pref("browser.urlbar.suggest.history", false);
pref("browser.urlbar.suggest.bookmark", false);
pref("browser.urlbar.suggest.openpage", false);
pref("browser.urlbar.suggest.topsites", false); // [FF78+]

// * 0850b: disable tab-to-search [FF85+]
// Alternatively, you can exclude on a per-engine basis by unchecking them in Options>Search
// [SETTING] Privacy & Security>Address Bar>When using the address bar, suggest>Search engines
	// pref("browser.urlbar.suggest.engines", false);

// * 0850c: disable location bar dropdown
// This value controls the total number of entries to appear in the location bar dropdown
	// pref("browser.urlbar.maxRichResults", 0);

// * 0850d: disable location bar autofill
	// pref("browser.urlbar.autoFill", false);

// * 0860: disable search and form history
// [NOTE] We also clear formdata on exit (see 2803)
// [SETTING] Privacy & Security>History>Custom Settings>Remember search and form history
	// pref("browser.formfill.enable", false);

// * 0862: disable browsing and download history
// [NOTE] We also clear history and downloads on exiting Firefox (see 2803)
// [SETTING] Privacy & Security>History>Custom Settings>Remember browsing and download history
	// pref("places.history.enabled", false);

// * 0870: disable Windows jumplist [WINDOWS]
//pref("browser.taskbar.lists.enabled", false);
//pref("browser.taskbar.lists.frequent.enabled", false);
//pref("browser.taskbar.lists.recent.enabled", false);
//pref("browser.taskbar.lists.tasks.enabled", false);

// * 0871: disable Windows taskbar preview [WINDOWS]
//lockPref("browser.taskbar.previews.enable", false); // [DEFAULT: false]



// *** [SECTION 0900]: PASSWORDS
// * 0901: disable saving passwords
// [SETTING] Privacy & Security>Logins and Passwords>Ask to save logins and passwords for websites
	// pref("signon.rememberSignons", false);

// * 0902: use a primary password
// There are no preferences for this. It is all handled internally
// [SETTING] Privacy & Security>Logins and Passwords>Use a Primary Password

// * 0903: set how often Firefox should ask for the primary password
// 0=the first time (default), 1=every time it's needed, 2=every n minutes (see 0904)
//lockPref("security.ask_for_password", 2);

// * 0904: set how often in minutes Firefox should ask for the primary password (see 0903)
// in minutes, default is 30
//lockPref("security.password_lifetime", 5);

// * 0905: disable auto-filling username & password form fields
// can leak in cross-site forms *and* be spoofed
// [NOTE] Username & password is still available when you enter the field
// [SETTING] Privacy & Security>Logins and Passwords>Autofill logins and passwords
	// pref("signon.autofillForms", false);

// * 0909: disable formless login capture for Password Manager [FF51+]
	// pref("signon.formlessCapture.enabled", false);

// * 0912: limit (or disable) HTTP authentication credentials dialogs triggered by sub-resources [FF41+]
// hardens against potential credentials phishing
//		0=don't allow sub-resources to open HTTP authentication credentials dialogs
//		1=don't allow cross-origin sub-resources to open HTTP authentication credentials dialogs
//		2=allow sub-resources to open HTTP authentication credentials dialogs (default)
lockPref("network.auth.subresource-http-auth-allow", 1);

// * 0913: disable automatic authentication on Microsoft sites [FF91+] [WINDOWS 10+]
// [SETTING] Privacy & Security>Logins and Passwords>Allow Windows single sign-on for...
lockPref("network.http.windows-sso.enabled", false);



// *** [SECTION 1000]: CACHE / SESSION (RE)STORE / FAVICONS
// ** CACHE
// * 1001: disable disk cache
// [SETUP-PERF] If you think disk cache may help (heavy tab user, high-res video),
// or you use a hardened Temporary Containers, then feel free to override this
// [NOTE] We also clear cache on exiting Firefox (see 2803)
pref("browser.cache.disk.enable", false);

// * 1003: disable memory cache
// capacity: -1=determine dynamically (default), 0=none, n=memory capacity in kibibytes
	// pref("browser.cache.memory.enable", false);
	// pref("browser.cache.memory.capacity", 0);

// * 1006: disable permissions manager from writing to disk [RESTART]
// [NOTE] This means any permission changes are session only
lockPref("permissions.memory_only", true); // [HIDDEN PREF]

// * 1007: disable media cache from writing to disk in Private Browsing
// [NOTE] MSE (Media Source Extensions) are already stored in-memory in PB
// [SETUP-WEB] ESR78: playback might break on subsequent loading (1650281)
	// pref("browser.privatebrowsing.forceMediaMemoryCache", true); // [FF75+]
	// pref("media.memory_cache_max_size", 65536);

//** SESSIONS & SESSION RESTORE
// * 1020: exclude "Undo Closed Tabs" in Session Restore
	// pref("browser.sessionstore.max_tabs_undo", 0);

//* 1021: disable storing extra session data [SETUP-CHROME]
// define on which sites to save extra session data such as form content, cookies and POST data
// 0=everywhere, 1=unencrypted sites, 2=nowhere
	// pref("browser.sessionstore.privacy_level", 2);

// * 1022: disable resuming session from crash
	// pref("browser.sessionstore.resume_from_crash", false);

// * 1023: set the minimum interval between session save operations
// Increasing this can help on older machines and some websites, as well as reducing writes
// [SETUP-CHROME] This can affect entries in "Recently Closed Tabs": i.e. the
// longer the interval the more chance a quick tab open/close won't be captured
	// pref("browser.sessionstore.interval", 30000); // [DEFAULT: 15000]

// * 1024: disable automatic Firefox start and session restore after reboot [FF62+] [WINDOWS]
lockPref("toolkit.winRegisterApplicationRestart", false);



// ** FAVICONS
// * 1030: disable favicons in shortcuts
// URL shortcuts use a cached randomly named .ico file which is stored in your
// profile/shortcutCache directory. The .ico remains after the shortcut is deleted
// If set to false then the shortcuts use a generic Firefox icon
pref("browser.shell.shortcutFavicons", false);

// * 1031: disable favicons in history and bookmarks
// Stored as data blobs in favicons.sqlite, these don't reveal anything that your
// actual history (and bookmarks) already do. Your history is more detailed, so
// control that instead; e.g. disable history, clear history on close, use PB mode
// [NOTE] favicons.sqlite is sanitized on Firefox close, not in-session
	// pref("browser.chrome.site_icons", false);

// * 1032: disable favicons in web notifications
lockPref("alerts.showFavicons", false); // [DEFAULT: false]



// *** [SECTION 1200]: HTTPS (SSL/TLS / OCSP / CERTS / HPKP / CIPHERS)
// Your cipher and other settings can be used in server side fingerprinting
//      [TEST] https://www.ssllabs.com/ssltest/viewMyClient.html
//      [TEST] https://browserleaks.com/ssl
//      [TEST] https://ja3er.com/
//      [1] https://www.securityartwork.es/2017/02/02/tls-client-fingerprinting-with-bro/
// TODO: fix
// ** SSL (Secure Sockets Layer) / TLS (Transport Layer Security)
// * 1201: require safe negotiation
pref("security.ssl.require_safe_negotiation", true);

// * 1202: control TLS versions with min and max
//      1=TLS 1.0, 2=TLS 1.1, 3=TLS 1.2, 4=TLS 1.3
// [WARNING] Leave these at default, otherwise you alter your TLS fingerprint
lockPref("security.tls.version.min", 3); // [DEFAULT: 3]
lockPref("security.tls.version.max", 4);

// * 1203: enforce TLS 1.0 and 1.1 downgrades as session only
lockPref("security.tls.version.enable-deprecated", false); // [DEFAULT: false]

// * 1204: disable SSL session tracking [FF36+]
lockPref("security.ssl.disable_session_identifiers", true); // [HIDDEN PREF]

// * 1206: disable TLS1.3 0-RTT (round-trip time) [FF51+]
lockPref("security.tls.enable_0rtt_data", false);

// ** OCSP (Online Certificate Status Protocol)
// * 1211: control when to use OCSP fetching (to confirm current validity of certificates)
//      0=disabled, 1=enabled (default), 2=enabled for EV certificates only
// OCSP (non-stapled) leaks information about the sites you visit to the CA (cert authority)
// It's a trade-off between security (checking) and privacy (leaking info to the CA)
// [NOTE] This pref only controls OCSP fetching and does not affect OCSP stapling
//lockPref("security.OCSP.enabled", 1);

// * 1212: set OCSP fetch failures (non-stapled, see 1211) to hard-fail [SETUP-WEB]
// When a CA cannot be reached to validate a cert, Firefox just continues the connection (=soft-fail)
// Setting this pref to true tells Firefox to instead terminate the connection (=hard-fail)
// It is pointless to soft-fail when an OCSP fetch fails: you cannot confirm a cert is still valid (it
// could have been revoked) and/or you could be under attack (e.g. malicious blocking of OCSP servers)
lockPref("security.OCSP.require", true);

// ** CERTS / HPKP (HTTP Public Key Pinning)
// * 1220: disable or limit SHA-1 certificates
//		0=all SHA1 certs are allowed
//		1=all SHA1 certs are blocked
//		2=deprecated option that now maps to 1
//		3=only allowed for locally-added roots (e.g. anti-virus)
//		4=only allowed for locally-added roots or for certs in 2015 and earlier
lockPref("security.pki.sha1_enforcement_level", 1);

// * 1221: disable Windows 8.1's Microsoft Family Safety cert [FF50+] [WINDOWS]
//		0=disable detecting Family Safety mode and importing the root
//		1=only attempt to detect Family Safety mode (don't import the root)
//		2=detect Family Safety mode and import the root
lockPref("security.family_safety.mode", 0);

// * 1222: disable intermediate certificate caching (fingerprinting attack vector) [FF41+] [RESTART]
// [NOTE] This affects login/cert/key dbs. The effect is all credentials are session-only.
// Saved logins and passwords are not available. Reset the pref and restart to return them.
//lockPref("security.nocertdb", true); // [HIDDEN PREF]

// * 1223: enable strict pinning
// PKP (Public Key Pinning) 0=disabled 1=allow user MiTM (such as your antivirus), 2=strict
lockPref("security.cert_pinning.enforcement_level", 2);

// * 1224: enable CRLite [FF73+]
lockPref("security.remote_settings.crlite_filters.enabled", true);
lockPref("security.pki.crlite_mode", 2);

// ** MIXED CONTENT
// * 1240: enforce no insecure active content on https pages
lockPref("security.mixed_content.block_active_content", true); // [DEFAULT: true]

// * 1241: disable insecure passive content (such as images) on https pages [SETUP-WEB]
pref("security.mixed_content.block_display_content", true);

// * 1244: enable HTTPS-Only mode [FF76+]
// When "https_only_mode" (all windows) is true, "https_only_mode_pbm" (private windows only) is ignored
// [SETTING] to add site exceptions: Padlock>HTTPS-Only mode>On/Off/Off temporarily
// [SETTING] Privacy & Security>HTTPS-Only Mode
pref("dom.security.https_only_mode", true); // [FF76+]
lockPref("dom.security.https_only_mode_pbm", true); // [FF80+], pbm=private browsing mode

// * 1245: enable HTTPS-Only mode for local resources [FF77+]
	// pref("dom.security.https_only_mode.upgrade_local", true);

// * 1246: disable HTTP background requests [FF82+]
lockPref("dom.security.https_only_mode_send_http_background_request", false);

// * 1247: treat .onion as a secure context [FF60+] [TOR]
// [NOTE] Firefox cannot access .onion sites by default: it is strongly recommended you just use Tor Browser
lockPref("dom.securecontext.whitelist_onions", false);

// ** CIPHERS [WARNING: do not meddle with your cipher suite: see the section 1200 intro]
// * 1261: disable 3DES (effective key size < 128 and no PFS)
	// pref("security.ssl3.rsa_des_ede3_sha", false);

// * 1264: disable the remaining non-modern cipher suites as of FF78 (in order of preferred by FF)
	// pref("security.ssl3.ecdhe_ecdsa_aes_256_sha", false);
	// pref("security.ssl3.ecdhe_ecdsa_aes_128_sha", false);
	// pref("security.ssl3.ecdhe_rsa_aes_128_sha", false);
	// pref("security.ssl3.ecdhe_rsa_aes_256_sha", false);
	// pref("security.ssl3.rsa_aes_128_gcm_sha256", false); // no PFS
	// pref("security.ssl3.rsa_aes_256_gcm_sha384", false); // no PFS
	// pref("security.ssl3.rsa_aes_128_sha", false); // no PFS
	// pref("security.ssl3.rsa_aes_256_sha", false); // no PFS

// ** UI (User Interface)
// * 1270: display warning on the padlock for "broken security" (if 1201 is false)
	// pref("security.ssl.treat_unsafe_negotiation_as_broken", true);

// * 1271: control "Add Security Exception" dialog on SSL warnings
//		0=do neither 
//		1=pre-populate url
//		2=pre-populate url + pre-fetch cert (default)
//lockPref("browser.ssl_override_behavior", 1);

// * 1272: display advanced information on Insecure Connection warning pages
pref("browser.xul.error_pages.expert_bad_cert", true);

// * 1273: display "insecure" icon and "Not Secure" text on HTTP sites
lockPref("security.insecure_connection_icon.enabled", true); // [FF59+] [DEFAULT: true]
lockPref("security.insecure_connection_text.enabled", true); // [FF60+]



// *** [SECTION 1400]: FONTS
// * 1401: disable websites choosing fonts (0=block, 1=allow)
// This can limit most (but not all) JS font enumeration which is a high entropy fingerprinting vector
// [WARNING] DO NOT USE: in FF80+ RFP covers this, and non-RFP users should use font vis (4620)
// [SETTING] General>Language and Appearance>Fonts & Colors>Advanced>Allow pages to choose...
//lockPref("browser.display.use_document_fonts", 0);

// * 1403: disable icon fonts (glyphs) and local fallback rendering
	// pref("gfx.downloadable_fonts.enabled", false); // [FF41+]
	// pref("gfx.downloadable_fonts.fallback_delay", -1);

// * 1404: disable rendering of SVG OpenType fonts
	// pref("gfx.font_rendering.opentype_svg.enabled", false);

//* 1408: disable graphite
pref("gfx.font_rendering.graphite.enabled", false);

// * 1409: limit system font exposure to a whitelist [FF52+] [RESTART]
// If the whitelist is empty, then whitelisting is considered disabled and all fonts are allowed
// [NOTE] In FF81+ the whitelist overrides RFP's font visibility (see 4620)
// [WARNING] DO NOT USE: in FF80+ RFP covers this, and non-RFP users should use font vis (4620)
// pref("font.system.whitelist", ""); // [HIDDEN PREF]



// *** [SECTION 1600]: HEADERS / REFERERS
//		Only *cross domain* referers need controlling: leave 1601, 1602, 1605 and 1606 alone
//		Expect some breakage: Use an extension if you need precise control
//	---
//		 		 full URI: https://example.com:8888/foo/bar.html?id=1234
//	scheme+host+port+path: https://example.com:8888/foo/bar.html
//		 scheme+host+port: https://example.com:8888
//	---
//	[1] https://feeding.cloud.geek.nz/posts/tweaking-referrer-for-privacy-in-firefox/
// * 1601: ALL: control when images/links send a referer
// 0=never, 1=send only when links are clicked, 2=for links and images (default)
	// pref("network.http.sendRefererHeader", 2);

// * 1602: ALL: control the amount of information to send
// 0=send full URI (default), 1=scheme+host+port+path, 2=scheme+host+port
// pref("network.http.referer.trimmingPolicy", 0);

// * 1603: CROSS ORIGIN: control when to send a referer
// 0=always (default), 1=only if base domains match, 2=only if hosts match
// [SETUP-WEB] Known to cause issues with older modems/routers and some sites e.g vimeo, icloud, instagram
	// pref("network.http.referer.XOriginPolicy", 2);

// * 1604: CROSS ORIGIN: control the amount of information to send [FF52+]
// 0=send full URI (default), 1=scheme+host+port+path, 2=scheme+host+port 
	// pref("network.http.referer.XOriginTrimmingPolicy", 2);

// * 1605: ALL: disable spoofing a referer
// [WARNING] Do not set this to true, as spoofing effectively disables the anti-CSRF
// (Cross-Site Request Forgery) protections that some sites may rely on
lockPref("network.http.referer.spoofSource", false); // [DEFAULT: false]

// * 1606: ALL: set the default Referrer Policy [FF59+]
// 0=no-referer, 1=same-origin, 2=strict-origin-when-cross-origin, 3=no-referrer-when-downgrade
// [NOTE] This is only a default, it can be overridden by a site-controlled Referrer Policy
	// pref("network.http.referer.defaultPolicy", 2); // [DEFAULT: 2 FF87+]
	// pref("network.http.referer.defaultPolicy.pbmode", 2); // [DEFAULT: 2]

// * 1607: hide (not spoof) referrer when leaving a .onion domain [FF54+] [TOR]
// [NOTE] Firefox cannot access .onion sites by default: it is strongly recommended you just use Tor Browser
//lockPref("network.http.referer.hideOnionSource", true);

// * 1610: ALL: enable the DNT (Do Not Track) HTTP header
// [NOTE] DNT is enforced with Enhanced Tracking Protection regardless of this pref
// [SETTING] Privacy & Security>Enhanced Tracking Protection>Send websites a "Do Not Track" signal...
lockPref("privacy.donottrackheader.enabled", true);
lockPref("privacy.donottrackheader.value", 1); // [*]



// *** [SECTION 1700]: CONTAINERS
// 	If you want to *really* leverage containers, we highly recommend Temporary Containers [2].
//	Read the article by the extension author [3], and check out the github wiki/repo [4].
//	[1] https://wiki.mozilla.org/Security/Contextual_Identity_Project/Containers
//	[2] https://addons.mozilla.org/firefox/addon/temporary-containers/
//	[3] https://medium.com/@stoically/enhance-your-privacy-in-firefox-with-temporary-containers-33925cd6cd21
//	[4] https://github.com/stoically/temporary-containers/wiki
// * 1701: enable Container Tabs setting in preferences (see 1702) [FF50+]
lockPref("privacy.userContext.ui.enabled", true);

// * 1702: enable Container Tabs [FF50+]
// [SETTING] General>Tabs>Enable Container Tabs
lockPref("privacy.userContext.enabled", true);

// * 1703: set behaviour on "+ Tab" button to display container menu on left click [FF74+]
// [NOTE] The menu is always shown on long press and right click
// [SETTING] General>Tabs>Enable Container Tabs>Settings>Select a container for each new tab
lockPref("privacy.userContext.newTabContainerOnLeftClick.enabled", true);



// *** [SECTION 2000]: PLUGINS / MEDIA / WEBRTC
// * 2001: disable WebRTC (Web Real-Time Communication)
// [SETUP-WEB] WebRTC can leak your IP address from behind your VPN, but if this is not
// in your threat model, and you want Real-Time Communication, this is the pref for you
lockPref("media.peerconnection.enabled", false);

// * 2002: limit WebRTC IP leaks if using WebRTC
lockPref("media.peerconnection.ice.default_address_only", true);
lockPref("media.peerconnection.ice.no_host", true); // [FF51+]
lockPref("media.peerconnection.ice.proxy_only_if_behind_proxy", true); // [FF70+]

// * 2003: disable screensharing 
lockPref("media.getusermedia.screensharing.enabled", false);
lockPref("media.getusermedia.browser.enabled", false);
lockPref("media.getusermedia.audiocapture.enabled", false);

// * 2004: set a default permission for Camera/Microphone [FF58+]
// 0=always ask (default), 1=allow, 2=block
// [SETTING] to add site exceptions: Ctrl+I>Permissions>Use the Camera/Microphone
// [SETTING] to manage site exceptions: Options>Privacy & Security>Permissions>Camera/Microphone>Settings
lockPref("permissions.default.camera", 2);
lockPref("permissions.default.microphone", 2);

// * 2020: disable GMP (Gecko Media Plugins)
pref("media.gmp-provider.enabled", false);

// * 2021: disable widevine CDM (Content Decryption Module)
// [NOTE] This is covered by the EME master switch (2022)
	// pref("media.gmp-widevinecdm.enabled", false);

// * 2022: disable all DRM content (EME: Encryption Media Extension)
// [SETUP-WEB] e.g. Netflix, Amazon Prime, Hulu, HBO, Disney+, Showtime, Starz, DirectTV
// [SETTING] General>DRM Content>Play DRM-controlled content
	// pref("media.eme.enabled", false);

// * 2030: disable autoplay of HTML5 media [FF63+]
// 0=Allow all, 1=Block non-muted media (default), 5=Block all
// [NOTE] You can set exceptions under site permissions
// [SETTING] Privacy & Security>Permissions>Autoplay>Settings>Default for all websites
lockPref("media.autoplay.default", 5);

// * 2031: disable autoplay of HTML5 media if you interacted with the site [FF78+]
// 0=sticky (default), 1=transient, 2=user
// [NOTE] If you have trouble with some video sites, then add an exception (see 2030)
pref("media.autoplay.blocking_policy", 2);



// *** [SECTION 2300]: WEB WORKERS
//	A worker is a JS "background task" running in a global context, i.e. it is different from
//	the current window. Workers can spawn new workers (must be the same origin & scheme),
//	including service and shared workers. Shared workers can be utilized by multiple scripts and
//	communicate between browsing contexts (windows/tabs/iframes) and can even control your cache.
//
//	[1]    Web Workers: https://developer.mozilla.org/docs/Web/API/Web_Workers_API
//	[2]         Worker: https://developer.mozilla.org/docs/Web/API/Worker
//	[3] Service Worker: https://developer.mozilla.org/docs/Web/API/Service_Worker_API
//	[4]   SharedWorker: https://developer.mozilla.org/docs/Web/API/SharedWorker
//	[5]   ChromeWorker: https://developer.mozilla.org/docs/Web/API/ChromeWorker
// 	[6]  Notifications: https://support.mozilla.org/questions/1165867#answer-981820

// * 2302: disable service workers [FF32, FF44-compat]
// Service workers essentially act as proxy servers that sit between web apps, and the
// browser and network, are event driven, and can control the web page/site it is associated
// with, intercepting and modifying navigation and resource requests, and caching resources.
// [NOTE] Service workers require HTTPS, have no DOM access, and are not supported in PB mode
// [SETUP-WEB] Disabling service workers will break some sites. This pref is required true for
// service worker notifications (2304), push notifications (disabled, 2305) and service worker
// cache (2740). If you enable this pref, then check those settings as well
pref("dom.serviceWorkers.enabled", false);

// * 2304: disable Web Notifications
// [NOTE] Web Notifications can also use service workers (2302) and are behind a prompt (2306)
	// pref("dom.webnotifications.enabled", false); // [FF22+]
pref("dom.webnotifications.serviceworker.enabled", false); // [FF44+]

// * 2305: disable Push Notifications [FF44+]
// Push is an API that allows websites to send you (subscribed) messages even when the site
// isn't loaded, by pushing messages to your userAgentID through Mozilla's Push Server
// [NOTE] Push requires service workers (2302) to subscribe to and display, and is behind
// a prompt (2306). Disabling service workers alone doesn't stop Firefox polling the
// Mozilla Push Server. To remove all subscriptions, reset your userAgentID.
lockPref("dom.push.enabled", false);
//lockPref("dom.push.userAgentID", "");

// * 2306: set a default permission for Notifications (both 2304 and 2305) [FF58+]
// 0=always ask (default), 1=allow, 2=block
// [NOTE] Best left at default "always ask", fingerprintable via Permissions API
// [SETTING] to add site exceptions: Ctrl+I>Permissions>Receive Notifications
// [SETTING] to manage site exceptions: Options>Privacy & Security>Permissions>Notifications>Settings
lockPref("permissions.default.desktop-notification", 0);



// *** [SECTION 2400]: DOM (DOCUMENT OBJECT MODEL) & JAVASCRIPT
// * 2401: disable website control over browser right-click context menu
// [NOTE] Shift-Right-Click will always bring up the browser right-click context menu
pref("dom.event.contextmenu.enabled", false);

// * 2402: disable website access to clipboard events/content [SETUP-HARDEN]
// [NOTE] This will break some sites' functionality e.g. Outlook, Twitter, Facebook, Wordpress
// This applies to onCut/onCopy/onPaste events - i.e. it requires interaction with the website
// [WARNING] In FF88 or lower, with clipboardevents enabled, if both "middlemouse.paste" and
// "general.autoScroll" are true (at least one is default false) then the clipboard can leak
	// pref("dom.event.clipboardevents.enabled", false);

// * 2403: disable clipboard commands (cut/copy) from "non-privileged" content [FF41+]
// this disables document.execCommand("cut"/"copy") to protect your clipboard
	// pref("dom.allow_cut_copy", false);

// * 2404: disable "Confirm you want to leave" dialog on page close
// Does not prevent JS leaks of the page close event
pref("dom.disable_beforeunload", true);

// * 2405: prevent scripts from moving and resizing open windows
pref("dom.disable_window_move_resize", true);

// * 2406: block popup windows
// [SETTING] Privacy & Security>Permissions>Block pop-up windows
lockPref("dom.disable_open_during_load", true);

// * 2407: limit events that can cause a popup [SETUP-WEB]
//lockPref("dom.popup_allowed_events", "click dblclick mousedown pointerdown");

// * 2408: enable (limited but sufficient) window.opener protection [FF65+]
// Makes rel=noopener implicit for target=_blank in anchor and area elements when no rel attribute is set
	// pref("dom.targetBlankNoOpener.enabled", true); // [DEFAULT: true FF79+]

// * 2414: disable shaking the screen 
pref("dom.vibrator.enabled", false);

// * 2420: disable asm.js [FF22+] [SETUP-PERF]
	// pref("javascript.options.asmjs", false);

// * 2421: disable Ion and baseline JIT to harden against JS exploits [SETUP-HARDEN]
// [NOTE] In FF75+, when **both** Ion and JIT are disabled, **and** the new
// hidden pref is enabled, then Ion can still be used by extensions (1599226)
// [WARNING] Disabling Ion/JIT can cause some site issues and performance loss
	// pref("javascript.options.ion", false);
	// pref("javascript.options.baselinejit", false);
	// pref("javascript.options.jit_trustedprincipals", true); // [FF75+] [HIDDEN PREF]

// * 2422: disable WebAssembly [FF52+]
	// pref("javascript.options.wasm", false);



// *** [SECTION 2500]: HARDWARE FINGERPRINTING
// * 2502: disable Battery Status API
// [NOTE] FF52+ Battery Status API is only available in chrome/privileged code
lockPref("dom.battery.enabled", false);

// * 2508: disable hardware acceleration [SETUP-HARDEN]
// [WARNING] Affects rendering and performance
// [SETTING] General>Performance>Custom>Use hardware acceleration when available
	// pref("gfx.direct2d.disabled", true); // [WINDOWS]
	// pref("layers.acceleration.disabled", true);

// * 2517: disable Media Capabilities API [FF63+]
// [WARNING] The API state is fingerprintable and disabling may affect performance
	// pref("media.media-capabilities.enabled", false);

// * 2520: disable virtual reality devices
// [WARNING] The API state is fingerprintable
lockPref("dom.vr.enabled", false);

// * 2521: set a default permission for Virtual Reality (see 2520) [FF73+]
// 0=always ask (default), 1=allow, 2=block
// [SETTING] to add site exceptions: Ctrl+I>Permissions>Access Virtual Reality Devices
// [SETTING] to manage site exceptions: Options>Privacy & Security>Permissions>Virtual Reality>Settings
lockPref("permissions.default.xr", 2);

// * 2522: disable/limit WebGL (Web Graphics Library)
// [SETUP-WEB] When disabled, will break some websites. When enabled, provides high entropy,
// especially with readPixels(). Some of the other entropy is lessened with RFP (see 4501)
	// pref("webgl.disabled", true);
	// pref("webgl.enable-webgl2", false);
	// pref("webgl.disable-fail-if-major-performance-caveat", true); // [DEFAULT: true FF86+]

// * 2523: enforce no system colors
// [SETTING] General>Language and Appearance>Fonts and Colors>Colors>Use system colors
	// pref("browser.display.use_system_colors", false); // [DEFAULT: false]

// * 2524: open links targeting new windows in a new tab instead
// Stops malicious window sizes and some screen resolution leaks.
// You can still right-click a link and open in a new window
pref("browser.link.open_newwindow", 2); // 1=most recent window or tab 2=new window, 3=new tab
pref("browser.link.open_newwindow.restriction", 0);

// * 2525: enforce non-native widget theme
// Security: removes/reduces system API calls, e.g. win32k API
// Fingerprinting: provides a uniform look and feel across platforms
	// pref("widget.non-native-theme.enabled", true); // [DEFAULT: true FF89+]



// *** [SECTION 2600]: MISCELLANEOUS
// * 2601: prevent accessibility services from accessing your browser [RESTART]
// [SETTING] Privacy & Security>Permissions>Prevent accessibility services from accessing your browser (FF80 or lower)
	// pref("accessibility.force_disabled", 1);

// * 2602: disable sending additional analytics to web servers
lockPref("beacon.enabled", false);

// * 2603: remove temp files opened with an external application
	// pref("browser.helperApps.deleteTempFileOnExit", true);

// * 2604: disable page thumbnail collection 
	// pref("browser.pagethumbnails.capturing_disabled", true); // [HIDDEN PREF]

// * 2606: disable UITour backend so there is no chance that a remote page can use it
lockPref("browser.uitour.enabled", false);
lockPref("browser.uitour.url", "");

// * 2607: disable various developer tools in browser context
// [SETTING] Devtools>Advanced Settings>Enable browser chrome and add-on debugging toolboxes
	// pref("devtools.chrome.enabled", false);

// * 2608: reset remote debugging to disabled
	// pref("devtools.debugger.remote-enabled", false); // [DEFAULT: false]

// * 2609: disable MathML (Mathematical Markup Language) [FF51+] [SETUP-HARDEN]
	// pref("mathml.disabled", true);

// * 2610: disable in-content SVG (Scalable Vector Graphics) [FF53+]
// [WARNING] Expect breakage including youtube player controls
// pref("svg.disabled", true);

// * 2611: disable middle mouse click opening links from clipboard
	// pref("middlemouse.contentLoadURL", false);

// * 2615: disable websites overriding Firefox's keyboard shortcuts [FF58+]
// 0 (default) or 1=allow, 2=block
// [SETTING] to add site exceptions: Ctrl+I>Permissions>Override Keyboard Shortcuts
	// pref("permissions.default.shortcuts", 2);

// * 2616: remove special permissions for certain mozilla domains [FF35+]
	// pref("permissions.manager.defaultsUrl", "");

// * 2617: remove webchannel whitelist 
	// pref("webchannel.allowObject.urlWhitelist", "");

// * 2619: use Punycode in Internationalized Domain Names to eliminate possible spoofing
// Firefox has *some* protections, but it is better to be safe than sorry
// [SETUP-WEB] Might be undesirable for non-latin alphabet users since legitimate IDN's are also punycoded
pref("network.IDN_show_punycode", true);

// * 2620: enforce PDFJS, disable PDFJS scripting [SETUP-CHROME]
// This setting controls if the option "Display in Firefox" is available in the setting below
// and by effect controls whether PDFs are handled in-browser or externally ("Ask" or "Open With")
// [SETTING] General>Applications>Portable Document Format (PDF)
	// pref("pdfjs.disabled", false); // [DEFAULT: false]
	// pref("pdfjs.enableScripting", false); // [FF86+]

// * 2621: disable links launching Windows Store on Windows 8/8.1/10 [WINDOWS]
lockPref("network.protocol-handler.external.ms-windows-store", false);

// * 2623: disable permissions delegation [FF73+]
// Currently applies to cross-origin geolocation, camera, mic and screen-sharing permissions and fullscreen requests
// Disabling delegation means any prompts for these will show/use their correct 3rd party origin
lockPref("permissions.delegation.enabled", false);

// * 2624: enable "window.name" protection [FF82+]
// If a new page from another domain is loaded into a tab, then window.name is set to an empty string. The original
// string is restored if the tab reverts back to the original page. This change prevents some cross-site attacks
lockPref("privacy.window.name.update.enabled", true); // [DEFAULT: true FF86+]

// * 2625: disable bypassing 3rd party extension install prompts [FF82+]
pref("extensions.postDownloadThirdPartyPrompt", false);

// * 2626: disable Fullscreen API (requires user interaction)
// [NOTE] You can still toggle fullscreen with F11
// [WARNING] This is fingerprintable and will break embedded video/game FS controls, e.g. youtube
	// pref("full-screen-api.enabled", false);

// ** DOWNLOADS
// * 2650: discourage downloading to desktop
// 0=desktop, 1=downloads (default), 2=last used
// [SETTING] To set your default "downloads": General>Downloads>Save files to
	// pref("browser.download.folderList", 2);

// * 2651: enable user interaction for security by always asking where to download
// [SETUP-CHROME] On Android this blocks longtapping and saving images
// [SETTING] General>Downloads>Always ask you where to save files
pref("browser.download.useDownloadDir", false);

// * 2652: disable adding downloads to the system's "recent documents" list
lockPref("browser.download.manager.addToRecentDocs", false);

// * 2654: disable "open with" in download dialog [FF50+] [SETUP-HARDEN]
// This is very useful to enable when the browser is sandboxed (e.g. via AppArmor)
// in such a way that it is forbidden to run external applications.
// [WARNING] This may interfere with some users' workflow or methods
// pref("browser.download.forbid_open_with", true);

// ** EXTENSIONS
// * 2660: lock down allowed extension directories
// [SETUP-CHROME] This will break extensions, language packs, themes and any other
// XPI files which are installed outside of profile and application directories
	// pref("extensions.enabledScopes", 5); // [HIDDEN PREF]
	// pref("extensions.autoDisableScopes", 15); // [DEFAULT: 15]

// * 2662: disable webextension restrictions on certain mozilla domains (you also need 4503) [FF60+]
pref("extensions.webextensions.restrictedDomains", "");

// ** SECURITY
// * 2680: enforce CSP (Content Security Policy)
// [NOTE] CSP is a very important and widespread security feature. Don't disable it!
lockPref("security.csp.enable", true); // [DEFAULT: true]

// * 2684: enforce a security delay on some confirmation dialogs such as install, open/save
lockPref("security.dialog_enable_delay", 500); // [DEFAULT: 1000]



// *** [SECTION 2700]: PERSISTENT STORAGE
//	Data SET by websites including
//        cookies : profile\cookies.sqlite
//   localStorage : profile\webappsstore.sqlite
//      indexedDB : profile\storage\default
//       appCache : profile\OfflineCache (FF89 or lower)
// serviceWorkers :
// 	[NOTE] indexedDB and serviceWorkers are not available in Private Browsing Mode
// 	[NOTE] Blocking cookies also blocks websites access to: localStorage (incl. sessionStorage),
//	indexedDB, sharedWorker, and serviceWorker (and therefore service worker cache and notifications)
//	if you set a site exception for cookies (either "Allow" or "Allow for Session") then they become
//	accessible to websites except shared/service workers where the cookie setting *must* be "Allow"

// * 2701: disable or isolate 3rd-party cookies and site-data [SETUP-WEB]
// 		0 = Accept cookies and site data
//		1 = (Block) All third-party cookies
//		2 = (Block) All cookies
//		3 = (Block) Cookies from unvisited websites
//		4 = (Block) Cross-site tracking cookies (default)
//		5 = (Isolate All) Cross-site cookies (TCP: Total Cookie Protection / dFPI: dynamic FPI) [1] (FF86+)
// Option 5 with FPI enabled (4001) is ignored and not shown, and option 4 used instead
// [NOTE] You can set cookie exceptions under site permissions or use an extension
// [NOTE] Enforcing category to custom ensures ETP related prefs are always honored
// [SETTING] Privacy & Security>Enhanced Tracking Protection>Custom>Cookies
pref("network.cookie.cookieBehavior", 1);
	// pref("browser.contentblocking.cryptomining.preferences.ui.enabled", true);
pref("browser.contentblocking.category", "custom");

// * 2702: set third-party cookies (if enabled, see 2701) to session-only
// [NOTE] .sessionOnly overrides .nonsecureSessionOnly except when .sessionOnly=false and
// .nonsecureSessionOnly=true. This allows you to keep HTTPS cookies, but session-only HTTP ones
pref("network.cookie.thirdparty.sessionOnly", true);
pref("network.cookie.thirdparty.nonsecureSessionOnly", true); // [FF58+]

// * 2703: delete cookies and site data on close
// 		0=keep until they expire (default), 2=keep until you close Firefox
// [NOTE] The setting below is disabled (but not changed) if you block all cookies (2701 = 2)
// [SETTING] Privacy & Security>Cookies and Site Data>Delete cookies and site data when Firefox is closed
	// pref("network.cookie.lifetimePolicy", 2);

// * 2710: enable Enhanced Tracking Protection (ETP) in all windows
// [SETTING] Privacy & Security>Enhanced Tracking Protection>Custom>Tracking content
// [SETTING] to add site exceptions: Urlbar>ETP Shield
// [SETTING] to manage site exceptions: Options>Privacy & Security>Enhanced Tracking Protection>Manage Exceptions 
pref("privacy.trackingprotection.enabled", true);

// * 2711: enable various ETP lists 
pref("privacy.trackingprotection.socialtracking.enabled", true);
pref("privacy.trackingprotection.cryptomining.enabled", true); // [DEFAULT: true]
pref("privacy.trackingprotection.fingerprinting.enabled", true); // [DEFAULT: true]

// * 2730: disable offline cache (appCache)
// [NOTE] In FF90+ the storage capability has been removed (1694662)
// [WARNING] The API is easily fingerprinted, do not disable 
// lockPref("browser.cache.offline.enable", false);

// * 2740: disable service worker cache and cache storage
// [NOTE] We clear service worker cache on exiting Firefox (see 2803)
pref("dom.caches.enabled", false);

// * 2750: disable Storage API [FF51+]
// The API gives sites the ability to find out how much space they can use, how much
// they are already using, and even control whether or not they need to be alerted
// before the user agent disposes of site data in order to make room for other things.
pref("dom.storageManager.enabled", false);

// * 2755: disable Storage Access API [FF65+]
pref("dom.storage_access.enabled", false);

// * 2760: enable Local Storage Next Generation (LSNG) [FF65+] 
pref("dom.storage.next_gen", true); // [DEFAULT: true FF92+]



// *** [SECTION 2800]: SHUTDOWN
//	* Sanitizing on shutdown is all or nothing. It does not use Managed Exceptions under
//      Privacy & Security>Delete cookies and site data when Firefox is closed (1681701)
//  * If you want to keep some sites' cookies (exception as "Allow") and optionally other site
//  data but clear all the rest on close, then you need to set the "cookie" and optionally the
//  "offlineApps" prefs below to false, and to set the cookie lifetime pref to 2 (2703)

// * 2802: enable Firefox to clear items on shutdown (see 2803)
// [SETTING] Privacy & Security>History>Custom Settings>Clear history when Firefox closes
	// pref("privacy.sanitize.sanitizeOnShutdown", true);

// * 2803: set what items to clear on shutdown (if 2802 is true) [SETUP-CHROME]
// [NOTE] If "history" is true, downloads will also be cleared
// [NOTE] Active Logins: does not refer to logins via cookies, but rather HTTP Basic Authentication [1]
// [NOTE] Offline Website Data: localStorage, service worker cache, QuotaManager (IndexedDB, asm-cache)
// [SETTING] Privacy & Security>History>Custom Settings>Clear history when Firefox closes>Settings
	// pref("privacy.clearOnShutdown.cache", true);
	// pref("privacy.clearOnShutdown.cookies", true);
	// pref("privacy.clearOnShutdown.downloads", true); // see note above
	// pref("privacy.clearOnShutdown.formdata", true); // Form & Search History
	// pref("privacy.clearOnShutdown.history", false); // Browsing & Download History
	// pref("privacy.clearOnShutdown.offlineApps", true); // Offline Website Data
	// pref("privacy.clearOnShutdown.sessions", true); // Active Logins
	// pref("privacy.clearOnShutdown.siteSettings", false); // Site Preferences

// * 2804: reset default items to clear with Ctrl-Shift-Del (to match 2803) [SETUP-CHROME]
// This dialog can also be accessed from the menu History>Clear Recent History
// Firefox remembers your last choices. This will reset them when you start Firefox
// [NOTE] Regardless of what you set "downloads" to, as soon as the dialog
// for "Clear Recent History" is opened, it is synced to the same as "history"
pref("privacy.cpd.cache", true);
pref("privacy.cpd.cookies", true);
pref("privacy.cpd.formdata", true); // Form & Search History
pref("privacy.cpd.history", false); // Browsing & Download History
pref("privacy.cpd.offlineApps", true); // Offline Website Data
pref("privacy.cpd.passwords", false); // this is not listed
pref("privacy.cpd.sessions", true); // Active Logins
pref("privacy.cpd.siteSettings", false); // Site Preferences


// * 2805: clear Session Restore data when sanitizing on shutdown or manually [FF34+]
// [NOTE] Not needed if Session Restore is not used (see 0102) or is already cleared with history (see 2803)
// [NOTE] privacy.clearOnShutdown.openWindows prevents resuming from crashes (see 1022)
// [NOTE] privacy.cpd.openWindows has a bug that causes an additional window to open
	// pref("privacy.clearOnShutdown.openWindows", true);
	// pref("privacy.cpd.openWindows", true);

// * 2806: reset default "Time range to clear" for "Clear Recent History" (see 2804)
// Firefox remembers your last choice. This will reset the value when you start Firefox
// 0=everything, 1=last hour, 2=last two hours, 3=last four hours, 4=today
// [NOTE] Values 5 (last 5 minutes) and 6 (last 24 hours) are not listed in the dropdown,
// which will display a blank value, and are not guaranteed to work.
pref("privacy.sanitize.timeSpan", 1);



// *** [SECTION 4000]: FPI (FIRST PARTY ISOLATION)
// * 4001: enable First Party Isolation [FF51+]
// [SETUP-WEB] May break cross-domain logins and site functionality until perfected
	// pref("privacy.firstparty.isolate", true);

// * 4002: enforce FPI restriction for window.opener [FF54+]
// [NOTE] Setting this to false may reduce the breakage in 4001
// FF65+ blocks postMessage with targetOrigin "*" if originAttributes don't match. But
// to reduce breakage it ignores the 1st-party domain (FPD) originAttribute [2][3]
// The 2nd pref removes that limitation and will only allow communication if FPDs also match
	// pref("privacy.firstparty.isolate.restrict_opener_access", true); // [DEFAULT: true]
	// pref("privacy.firstparty.isolate.block_post_message", true);

// * 4003: enable scheme with FPI [FF78+]
// [NOTE] Experimental: existing data and site permissions are incompatible
// and some site exceptions may not work e.g. HTTPS-only mode (see 1244)
	// pref("privacy.firstparty.isolate.use_site", true);



// *** [SECTION 4500]: RFP (RESIST FINGERPRINTING)
// RFP covers a wide range of ongoing fingerprinting solutions.
// It is an all-or-nothing buy in: you cannot pick and choose what parts you want
//
// [WARNING] DO NOT USE extensions to alter RFP protected metrics
// [WARNING] DO NOT USE prefs in section 4600 with RFP as they can interfere
// * 4501: enable privacy.resistFingerprinting [FF41+]
// [SETUP-WEB] RFP can cause some website breakage: mainly canvas, use a site exception via the urlbar
// RFP also has a few side effects: mainly timezone is UTC0, and websites will prefer light theme.
lockPref("privacy.resistFingerprinting", true);

// * 4502: set new window sizes to round to hundreds [FF55+] [SETUP-CHROME]
// Width will round down to multiples of 200s and height to 100s, to fit your screen.
// The max values are a starting point to round from if you want some control.
	// pref("privacy.window.maxInnerWidth", 1000);
	// pref("privacy.window.maxInnerHeight", 1000);

// * 4503: disable mozAddonManager Web API [FF57+]
// [NOTE] To allow extensions to work on AMO, you also need 2662
pref("privacy.resistFingerprinting.block_mozAddonManager", true); // [HIDDEN PREF]

// * 4504: enable RFP letterboxing [FF67+]
// Dynamically resizes the inner window by applying margins in stepped ranges
// The format is "width1xheight1, width2xheight2, ..." (e.g. "800x600, 1000x1000")
// [SETUP-WEB] This is independent of RFP (4501). If you're not using RFP, or you are but
// dislike the margins, then flip this pref, keeping in mind that it is effectively fingerprintable
// [WARNING] DO NOT USE: the dimension pref is only meant for testing
	// pref("privacy.resistFingerprinting.letterboxing", true); // [HIDDEN PREF]
	// pref("privacy.resistFingerprinting.letterboxing.dimensions", ""); // [HIDDEN PREF]

// * 4505: experimental RFP [FF91+]
// [WARNING] DO NOT USE unless testing, see [1] comment 12
// [1] https://bugzilla.mozilla.org/1635603
	// pref("privacy.resistFingerprinting.exemptedDomains", "*.example.invalid");
	// pref("privacy.resistFingerprinting.testGranularityMask", 0);

// * 4510: disable showing about:blank as soon as possible during startup [FF60+]
// When default true this no longer masks the RFP chrome resizing activity
	// pref("browser.startup.blankWindow", false);

// * 4520: disable chrome animations [FF77+] [RESTART]
//  [NOTE] pref added in FF63, but applied to chrome in FF77. RFP spoofs this for web content 
	// pref("ui.prefersReducedMotion", 1); // [HIDDEN PREF]



// *** [SECTION 4600]: NON-RFP
// [WARNING] DO NOT USE with RFP. RFP already covers these, and they can interfere
// [NOTE] These prefs will not help anti-fingerprinting. They are insufficient
// on their own, can cause breakage, and will make you stand out.
// * 4601: spoof number of CPU cores [FF48+]
	// pref("dom.maxHardwareConcurrency", 2);

// * 4602: disable Resource Timing API
	// pref("dom.enable_resource_timing", false);

// * 4603: disable Navigation Timing API
	// pref("dom.enable_performance", false);

// * 4604: disable device Sensor APIs
	// pref("device.sensors.enabled", false);

//* 4605: disable remembering site specific zoom
	// pref("browser.zoom.siteSpecific", false);

// * 4606: disable gamepad API to prevent USB device ID enumeration
	// pref("dom.gamepad.enabled", false);

// * 4607: disable Network Information API [FF31+]
	// pref("dom.netinfo.enabled", false); // [DEFAULT: true on Android]

// * 4608: disable the SpeechSynthesis (Text-to-Speech) part of the Web Speech API
	// pref("media.webspeech.synth.enabled", false);
   
// * 4610: disable video statistics to mitigate JS performance fingerprinting [FF25+]
	// pref("media.video_stats.enabled", false);
   
// * 4611: disable touch events: 0=disabled, 1=enabled, 2=autodetect
	// pref("dom.w3c_touch_events.enabled", 0);
   
// * 4612: disable media device enumeration [FF29+]
pref("media.navigator.enabled", false);
pref("media.navigator.video.enabled", false);

/* 4613: disable MediaDevices change detection [FF51+]
	// pref("media.ondevicechange.enabled", false);
   
// * 4614: disable WebGL debug info being available to websites
	// pref("webgl.enable-debug-renderer-info", false);
   
// * 4615: enforce prefers-reduced-motion as no-preference: 0=no-preference, 1=reduce [FF63+] [RESTART]
	// pref("ui.prefersReducedMotion", 0); // [HIDDEN PREF]
   
// * 4617: disable exposure of system colors to CSS or canvas [FF44+] 
	// pref("ui.use_standins_for_native_colors", true);
   
// * 4618: enforce prefers-color-scheme as light: 0=light, 1=dark [FF67+] 
	// pref("ui.systemUsesDarkTheme", 0); // [HIDDEN PREF]
   
// * 4619: disable Web Audio API [FF51+] 
	// pref("dom.webaudio.enabled", false);
   
// * 4620: limit font visibility (Windows, Mac, some Linux) [FF79+]
// Uses hardcoded lists with two parts: kBaseFonts + kLangPackFonts [1], bundled fonts are auto-allowed
// 1=only base system fonts, 2=also fonts from optional language packs, 3=also user-installed fonts
// [1] https://searchfox.org/mozilla-central/search?path=StandardFonts*.inc 
	// pref("layout.css.font-visibility.level", 1);
   
// * 4650: navigator DOM object overrides
// [WARNING] NO NOT USE: these prefs are insufficient and leak 
	// pref("general.appname.override", ""); // [HIDDEN PREF]
	// pref("general.appversion.override", ""); // [HIDDEN PREF]
	// pref("general.buildID.override", ""); // [HIDDEN PREF]
	// pref("general.oscpu.override", ""); // [HIDDEN PREF]
	// pref("general.platform.override", ""); // [HIDDEN PREF]
	// pref("general.useragent.override", ""); // [HIDDEN PREF]



// *** [SECTION 5000]: PERSONAL
// Non-project related but useful. If any of these interest you, add them to your overrides
// To save some overrides, we've made a few active as they seem to be universally used
// * WARNINGS
	// pref("browser.tabs.warnOnClose", false);
	// pref("browser.tabs.warnOnCloseOtherTabs", false);
	// pref("browser.tabs.warnOnOpen", false);
	// pref("full-screen-api.warning.delay", 0);
	// pref("full-screen-api.warning.timeout", 0);

// * APPEARANCE
	// pref("browser.download.autohideButton", false); // [FF57+]
	// pref("toolkit.legacyUserProfileCustomizations.stylesheets", true); // [FF68+] allow userChrome/userContent

// * CONTENT BEHAVIOR
	// pref("accessibility.typeaheadfind", true); // enable "Find As You Type"
	// pref("clipboard.autocopy", false); // disable autocopy default [LINUX]
	// pref("layout.spellcheckDefault", 2); // 0=none, 1-multi-line, 2=multi-line & single-line

// * UX BEHAVIOR
	// pref("browser.backspace_action", 2); // 0=previous page, 1=scroll up, 2=do nothing
	// pref("browser.quitShortcut.disabled", true); // disable Ctrl-Q quit shortcut [LINUX] [MAC] [FF87+]
	// pref("browser.tabs.closeWindowWithLastTab", false);
	// pref("browser.tabs.loadBookmarksInTabs", true); // open bookmarks in a new tab [FF57+]
	// pref("browser.urlbar.decodeURLsOnCopy", true); // see bugzilla 1320061 [FF53+]
	// pref("general.autoScroll", false); // middle-click enabling auto-scrolling [DEFAULT: false on Linux]
	// pref("ui.key.menuAccessKey", 0); // disable alt key toggling the menu bar [RESTART]
	// pref("view_source.tab", false); // view "page/selection source" in a new window [FF68+, FF59 and under]

// * UX FEATURES: disable and hide the icons and menus ***/
pref("browser.pocket.enabled", false);
pref("extensions.pocket.enabled", false); // Pocket Account [FF46+]
	// pref("browser.messaging-system.whatsNewPanel.enabled", false); // What's New toolbar icon [FF69+]
	// pref("identity.fxaccounts.enabled", false); // Firefox Accounts & Sync [FF60+] [RESTART]
	// pref("reader.parse-on-load.enabled", false); // Reader View

// * OTHER
	// pref("browser.bookmarks.max_backups", 2);
	// pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false); // disable CFR [FF67+]
    // [SETTING] General>Browsing>Recommend extensions as you browse
	// pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features", false); // disable CFR [FF67+]
	// [SETTING] General>Browsing>Recommend features as you browse
	// pref("network.manage-offline-status", false); // see bugzilla 620472
	// pref("xpinstall.signatures.required", false); // enforced extension signing (Nightly/ESR)


// Disable sync
lockPref("identity.fxaccounts.auth.uri", "");
lockPref("identity.fxaccounts.remote.force_auth.uri", "");
lockPref("identity.fxaccounts.remote.signin.uri", "");
lockPref("identity.fxaccounts.remote.signup.uri", "");
lockPref("identity.fxaccounts.settings.uri", "");
lockPref("services.sync.autoconnect", false);
lockPref("services.sync.engine.addons", false);
lockPref("services.sync.engine.bookmarks", false);
lockPref("services.sync.engine.history", false);
lockPref("services.sync.engine.passwords", false);
lockPref("services.sync.engine.prefs", false);
lockPref("services.sync.engine.tabs", false);
lockPref("services.sync.serverURL", "");

// Turn on XSS Filter
lockPref("browser.urlbar.filter.javascript", true);

// Disable Firefox Hello
// Firefox connects to third-party (Telefonica) servers without asking for permission.
// https://support.mozilla.org/en-US/kb/firefox-hello-video-and-voice-conversations-online
lockPref("loop.enabled", false);

// * END: internal custom pref to test for syntax errors
